{"version":3,"file":"static/js/558.5cf025ab.chunk.js","mappings":"6NA0BA,EAxBkB,SAACA,GAElB,IAAMC,GAAeC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,gBAChDI,EAAe,SAACJ,GAAD,YAAmCK,IAAjBL,GAA8BA,EAAaM,KAAI,SAACC,EAAIC,GAAL,OAAW,yBAAmBD,GAATC,EAAID,OACzGE,EAAY,GAElB,IAAK,IAAMC,KAAOV,EAAaW,MAAOF,EAAUG,KAAKR,EAAaJ,EAAaW,MAAMD,KAErF,OACC,8BACEV,IACA,2BAE2B,iBAAjBA,IAA6B,+BAAQA,UACpBK,IAAzBL,EAAaa,UAAyB,+BAAOb,EAAaa,gBACnCR,IAAvBL,EAAaW,QAAuB,yBAAMF,U,UCGhD,EAjBkB,SAACV,GAElB,OACC,gBAAKe,UAAU,kBAAf,UACC,iBAAKA,UAAU,iBAAf,WACC,gBAAKC,QAAShB,EAAMiB,MAAOF,UAAU,gBAArC,SAAsDf,EAAMiB,SAC5D,gBAAKF,UAAU,cAAf,SAA8Bf,EAAMkB,QACpC,gBAAKH,UAAU,aAAf,UACC,SAAC,IAAD,CAAQI,WAAYnB,EAAMmB,WAAYC,QAAS,SAAUF,KAAMlB,EAAMqB,kB,UC+B1E,EAhCkB,SAACrB,GAElB,IAAMsB,GAAUpB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMoB,MAAMD,WAC3CE,GAAUtB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoB,WAC3CC,GAAQvB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMqB,SACzCC,GAAWC,EAAAA,EAAAA,MAIXC,GAAWC,EAAAA,EAAAA,MAGXN,EAAQ,CACbN,MAAOO,EAAU,mCAAH,kBACdN,KAAMM,GAAU,SAAC,EAAD,IAAH,iDACbL,WAAY,WATM,IAACW,EACUJ,GAASK,EAAAA,EAAAA,OADnBD,GAWP,EAXcJ,GAASM,EAAAA,EAAAA,IAAcF,IAYhDL,GAR2BG,EAAS,MAUrCP,QAASG,EAAO,gBAGXS,GAAYC,EAAAA,EAAAA,GAAMC,GAExB,OACC,+BACGb,GAAWE,KAAY,SAACS,GAAD,UAAeV,O,UCtB3C,EAVkB,SAACvB,GAElB,OACC,iCACC,SAAC,EAAD,KACA,SAACoC,EAAA,EAAD","sources":["componrnts/modal/TextModal/errorText/ErrorText.jsx","componrnts/modal/TextModal/modalText.jsx","componrnts/modal/TextModal/TextModal.jsx","componrnts/modal/ModalPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst ErrorText = (props) => {\r\n\r\n\tconst errorMessage = useSelector(state => state.users.errorMessage);\r\n\tconst addErrorText = (errorMessage) => errorMessage !== undefined && errorMessage.map((el, i) => <div key={i + el}>{el}</div>);\r\n\tconst errorElem = [];\r\n\t// трансформируем объект с ошибками в массив\r\n\tfor (const key in errorMessage.fails) errorElem.push(addErrorText(errorMessage.fails[key]));\r\n\t// выводим сообщение об ошибке в зависимости от формата сообщений об ошибке\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{errorMessage && (\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t{typeof (errorMessage) == \"string\" && <div > {errorMessage}</div>}\r\n\t\t\t\t\t{errorMessage.message !== undefined && <div>\t{errorMessage.message}</div>}\r\n\t\t\t\t\t{errorMessage.fails !== undefined && <div>{errorElem}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div >\r\n\t\t\t)}\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ErrorText;","\r\nimport Button from './../../button/button';\r\n\r\nconst ModalText = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"modal__text-box\">\r\n\t\t\t<div className=\"modal__wrapper\">\r\n\t\t\t\t<div hidden={!props.title} className=\"modal__titile\">{props.title}</div>\r\n\t\t\t\t<div className=\"modal__text\">{props.text}</div>\r\n\t\t\t\t<div className=\"modal__btn\">\r\n\t\t\t\t\t<Button onClickBtn={props.onClickBtn} btnType={'button'} text={props.btnText} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default ModalText;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeIsModal } from \"../../redux/modalReducer\";\r\nimport { clearError } from \"../../redux/usersReducer\";\r\nimport Modal from \"../modal\";\r\nimport ErrorText from \"./errorText/ErrorText\";\r\nimport ModalText from './modalText';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst TextModal = (props) => {\r\n\r\n\tconst isModal = useSelector(state => state.modal.isModal);\r\n\tconst isError = useSelector(state => state.users.isError);\r\n\tconst isReg = useSelector(state => state.users.isReg)\r\n\tconst dispatch = useDispatch();\r\n\tconst setIsModal = (is) => dispatch(changeIsModal(is));\r\n\tconst clearErrorFalse = () => dispatch(clearError());\r\n\t// редиректим на основную страницу\r\n\tconst redirect = useNavigate();\r\n\tconst redirectToMain = () => redirect(`/`);\r\n\r\n\tconst modal = {\r\n\t\ttitle: isError ? 'Opps there seems to be an error ' : `Congratulations`,\r\n\t\ttext: isError ? <ErrorText /> : `You have successfully passed the registration `,\r\n\t\tonClickBtn: () => {\r\n\t\t\tclearErrorFalse();//очищаем сообщение об ошибке в стейте\r\n\t\t\tsetIsModal(false);// закрыввем модальное окно\r\n\t\t\tisReg && redirectToMain();\t\t// редирект на главную страницу\r\n\t\t},\r\n\t\tbtnText: isError ? `Back` : `Great`,\r\n\t};\r\n\t// создаем компоненту с тестовым сообщнием\r\n\tconst TextModal = Modal(ModalText);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{(isModal || isError) && <TextModal {...modal} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TextModal;","\r\nimport TextModal from \"./TextModal/TextModal\";\r\nimport PreloaderModal from './PreloaderModal/PreloaderModal';\r\n\r\n\r\nconst ModalPage = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TextModal />\r\n\t\t\t<PreloaderModal />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ModalPage;"],"names":["props","errorMessage","useSelector","state","users","addErrorText","undefined","map","el","i","errorElem","key","fails","push","message","className","hidden","title","text","onClickBtn","btnType","btnText","isModal","modal","isError","isReg","dispatch","useDispatch","redirect","useNavigate","is","clearError","changeIsModal","TextModal","Modal","ModalText","PreloaderModal"],"sourceRoot":""}