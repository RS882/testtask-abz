{"version":3,"file":"static/js/269.2d856973.chunk.js","mappings":"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","sources":["componrnts/Hook/useHeaderWhenScroll.js","assets/img/Photo-cover.svg","componrnts/main/Users/userCard/UssrCard.jsx","componrnts/main/Users/Users.jsx","componrnts/main/Users/UsersContainer.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\"\r\n// отслеживам скрол на странице\r\nexport const useHeaderWhenScroll = (scroll, threshold = 1) => {\r\n\t// подключемся к рефу\r\n\tconst containerRef = useRef(null);\r\n\t// колбек если есть пересчение целевого элемента  вызвается колбек с true или false\r\n\r\n\tconst callbackFunction = entries => {\r\n\r\n\r\n\t\treturn entries[0].isIntersecting ? scroll(false) : scroll(true);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst current = containerRef.current;\r\n\t\t// создаем асинх наблюдателя за пересечением. процент переченение 1\r\n\t\tconst observer = new IntersectionObserver(callbackFunction, { threshold: threshold, })\r\n\t\t//добавляем наблюдателя\r\n\t\tcurrent && observer.observe(current);\r\n\t\t// снимаем наблюдателя при демонтировки компоненті\r\n\t\treturn () => current && observer.unobserve(current);\r\n\t}, [containerRef]);\r\n\r\n\treturn containerRef;\r\n}\r\n\r\n","var _circle, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPhotoCover(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 70,\n    height: 70,\n    viewBox: \"0 0 70 70\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35,\n    cy: 35,\n    r: 35,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.9524 70C15.6305 70.0018 -0.0753237 54.2415 0.000271752 34.9298C0.0776671 15.5786 15.7241 -0.0341429 35.0046 5.60763e-05C54.3588 0.036055 69.944 15.593 69.9998 34.937C70.0574 54.3045 54.3678 70 34.9524 70ZM11.2442 57.5552C24.1494 71.3212 46.1603 71.0656 58.7145 57.5642C58.4499 57.2582 58.198 56.9306 57.9082 56.639C56.6014 55.325 55.0535 54.3369 53.3814 53.5917C51.1964 52.6179 48.9447 51.7917 46.738 50.8666C45.6923 50.4274 44.6466 49.9648 43.6638 49.4032C42.5425 48.7642 41.8153 47.8031 41.7829 46.4315C41.7577 45.3245 41.7217 44.2158 41.6713 43.1088C41.6372 42.3888 41.8333 41.7714 42.2815 41.1936C43.9842 38.9887 44.8716 36.485 44.8878 33.6915C44.8896 33.2523 45.0731 32.9859 45.4043 32.7249C46.1423 32.1399 46.7974 31.4505 46.9954 30.4984C47.2078 29.476 47.359 28.4356 47.4562 27.3935C47.5354 26.5457 47.4436 25.7177 46.3655 25.6295C46.5167 24.3497 46.7164 23.1672 46.7866 21.9792C46.927 19.5529 46.6642 17.1824 45.4421 15.0152C44.3892 13.1487 42.8017 12.1245 40.631 12.0417C40.343 12.0309 40.0479 11.9427 39.7725 11.8473C37.0222 10.9023 34.182 10.6125 31.3508 11.1777C25.8395 12.2757 22.5421 17.0132 23.2045 22.6524C23.3197 23.6262 23.505 24.5909 23.6688 25.6349C22.9129 25.6745 22.4683 26.1101 22.4827 26.8301C22.5223 28.9702 22.5619 31.1337 24.4554 32.6439C24.9288 33.0219 25.0494 33.4971 25.098 34.0551C25.1663 34.856 25.2581 35.6588 25.3859 36.4526C25.6847 38.3173 26.7719 39.8059 27.7474 41.352C27.9886 41.7354 28.1848 42.2178 28.2028 42.6624C28.2514 43.8882 28.2028 45.1175 28.1758 46.3451C28.1488 47.5763 27.5836 48.5266 26.5775 49.2088C26.1077 49.5274 25.6271 49.8496 25.1088 50.0692C23.8704 50.5966 22.6123 51.0826 21.3524 51.5559C18.7425 52.5387 16.1579 53.5719 13.8378 55.1594C12.8659 55.8236 11.9677 56.5634 11.2442 57.5552Z\",\n    fill: \"#D0CFCF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhotoCover);\nexport default __webpack_public_path__ + \"static/media/Photo-cover.fb98cf13a87225efe558669bdc541ac7.svg\";\nexport { ForwardRef as ReactComponent };","import notPhoto from './../../../../assets/img/Photo-cover.svg';\r\nimport { useState } from 'react';\r\nimport { showPhoneNum } from './../../../utilits/functions';\r\n\r\nconst UserCard = (props) => {\r\n\t//карточка пользователя\r\n\tconst [userPhoto, setUserPhoto] = useState(props.photo);\r\n\t// выводим телефон в нужном формате\r\n\tconst phone = showPhoneNum(props.phone);\r\n\t// показываем картинку если у пользователя нет фото\r\n\tconst onErrorImg = () => setUserPhoto(notPhoto);\r\n\r\n\treturn (\r\n\t\t<div className=\"usercard\" >\r\n\t\t\t<div className=\"usercard__body \">\r\n\t\t\t\t<div className=\"usercard__item item-card\" >\r\n\t\t\t\t\t<div className=\"item-card__img\">\r\n\t\t\t\t\t\t<img onError={onErrorImg} src={userPhoto || notPhoto} alt='user' width='70' height='70' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"usercard__item item-card\" data-title={props.name}>\r\n\t\t\t\t\t<h3 className=\"item-card__name \" >{props.name} </h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"usercard__item item-card\" data-title={props.position}>\r\n\t\t\t\t\t<div className=\" item-card__position \" >{props.position}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"usercard__item item-card\" data-title={props.email}>\r\n\t\t\t\t\t<div className=\"item-card__contacts \" >\r\n\t\t\t\t\t\t<a href={`mailto:${props.email}`}>{props.email}</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"usercard__item item-card\" data-title={phone}>\r\n\t\t\t\t\t<div className=\"item-card__contacts \" >\r\n\t\t\t\t\t\t<a href={`tel:${props.phone}`}>{phone}</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default UserCard;","import Button from \"../../button/button\";\r\n\r\nimport UserCard from \"./userCard/UssrCard\";\r\n\r\nconst Users = (props) => {\r\n\t// страница  пользователей\r\n\tconst usersElem = props.users.map(el => <UserCard {...el} key={el.id} className='users__user-card' />);\r\n\r\n\treturn (\r\n\t\t<div className=\"main__users users\">\r\n\t\t\t<div className=\"users__container container\">\r\n\t\t\t\t<div className=\"users__wrapper \">\r\n\t\t\t\t\t<h2 className=\"users__title \">{props.title}</h2>\r\n\t\t\t\t\t<h4 className=\"users__subtitle \">{props.subtitle}</h4>\r\n\t\t\t\t\t<div className=\"users__grid \">\r\n\t\t\t\t\t\t{usersElem}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"users__btn \">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tbtnDisabled={props.disebledBtn}\r\n\t\t\t\t\t\t\tonClickBtn={props.onClickBtn}\r\n\t\t\t\t\t\t\tbtnType={'button'}\r\n\t\t\t\t\t\t\ttext={`Show more`}\r\n\t\t\t\t\t\t\thiddenBtn={props.hiddenBtn}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Users;","import Users from \"./Users\"\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addUsers, getUsers } from \"../../redux/thunkCreation\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { changeUsersIsScroll } from \"../../redux/scrollReducer\";\r\nimport { useHeaderWhenScroll } from './../../Hook/useHeaderWhenScroll';\r\n\r\nconst UsersContainer = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst users = useSelector(state => state.users.users);\r\n\t// есть ли процесс загрузки\r\n\tconst isFetching = useSelector(state => state.users.isFetching);\r\n\t// зареган ли пользователь\r\n\tconst isReg = useSelector(state => state.users.isReg);\r\n\r\n\t// проверка значений брейкпоинта\r\n\tconst { is768, is1024 } = useSelector(state => state.mediaQuery.breakPoints);\r\n\t// если была нажата кнопка showMore -true\r\n\tconst [isShowMore, setIsShowMore] = useState(false);\r\n\t// колличество добавляемых/(показываемых при старте) пользователей\r\n\tconst numShowUsers = is1024 ? 9 : (is768 ? 6 : 3);\r\n\tuseEffect(() => {\r\n\t\t// возврщаем занчение нажатие кнопки showMore -fals- если пользователь уже зареган\r\n\t\tisReg && setIsShowMore(false);\r\n\t\t// если не был нажата showMore \r\n\t\t!isShowMore && dispatch(getUsers(numShowUsers));\r\n\t}, [numShowUsers, isReg])\r\n\t// текст заголовка\r\n\tconst title = `Our cheerful users `;\r\n\t// текст подзаголовка\r\n\tconst subtitle = `The best specialists are shown below`;\r\n\tconst onClickBtn = () => {\r\n\t\t// загружаем следующую старницу с пользователями\r\n\t\tdispatch(addUsers(users.nextPage));\r\n\t\t// если до этого showMore не была нажата- ставим занчение нажатия в true\r\n\t\t!isShowMore && setIsShowMore(true);\r\n\t}\r\n\t//загружаем по мене прокрутки станицы\r\n\tconst isScroll = useSelector(state => state.scroll.usersIsScroll);\r\n\tconst setScroll = (is) => dispatch(changeUsersIsScroll(is))\r\n\tconst usersRef = useHeaderWhenScroll(setScroll, 0.5);\r\n\tconsole.log(isScroll);\r\n\r\n\treturn <div ref={usersRef}>\r\n\t\t{!isScroll && <Users\r\n\t\t\tusers={users.users}\r\n\t\t\tonClickBtn={onClickBtn}\r\n\t\t\ttitle={title}\r\n\t\t\tsubtitle={subtitle}\r\n\t\t\tdisebledBtn={isFetching}\r\n\t\t\t// прячем кнопку showMore если нет сл. страницы для показа \r\n\t\t\t// или количество показанных пользователей равно количеству всех пользователей \r\n\t\t\thiddenBtn={users.nextPage === null || +users.totalUsers == users.length}\r\n\t\t/>}\r\n\t</div>\r\n}\r\nexport default UsersContainer;"],"names":["useHeaderWhenScroll","scroll","threshold","containerRef","useRef","callbackFunction","entries","isIntersecting","useEffect","current","observer","IntersectionObserver","observe","unobserve","props","useState","photo","userPhoto","setUserPhoto","phone","showPhoneNum","className","onError","notPhoto","src","alt","width","height","name","position","email","href","usersElem","users","map","el","key","id","title","subtitle","btnDisabled","disebledBtn","onClickBtn","btnType","text","hiddenBtn","dispatch","useDispatch","useSelector","state","isFetching","isReg","mediaQuery","breakPoints","is768","is1024","isShowMore","setIsShowMore","numShowUsers","getUsers","isScroll","usersIsScroll","usersRef","is","changeUsersIsScroll","console","log","ref","addUsers","nextPage","totalUsers","length"],"sourceRoot":""}