{"version":3,"file":"static/js/348.9953f4af.chunk.js","mappings":"8HAiBA,IAfe,SAACA,GAEf,OACC,gBAAKC,UAAU,MAAf,UACC,mBACCA,UAAU,WACVC,SAAUF,EAAMG,YAChBC,QAASJ,EAAMK,WACfC,KAAMN,EAAMO,QACZC,OAAQR,EAAMS,UALf,SAMET,EAAMU,W,kJCYX,EArBe,SAACV,GAKf,OACC,iBAAKC,UAAU,sBAAf,WACC,gBAAKA,UAAU,aAAaU,MAAOX,EAAMY,aACzC,gBAAKX,UAAU,8BAAf,UACC,iBAAKA,UAAU,0BAAf,WACC,gBAAIA,UAAU,iBAAd,UAAiCD,EAAMa,SAAvC,QACA,oBAASZ,UAAU,mBAAnB,SAAuCD,EAAMc,kBAC7C,gBAAKb,UAAU,eAAf,UACC,SAAC,IAAD,CAAQI,WAAYL,EAAMK,WAAYE,QAAS,SAAUG,KAAM,uB,wCC8DrE,EA9DwB,SAACV,GAExB,IAAQe,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,eAAhDJ,MAIJK,EAAW,qSAMf,IAAKL,EAAO,CACX,IAAMM,EAASD,EAAYE,QAAQ,KAAO,EAC1CF,EAAeC,GAAUA,EAAS,KAAOE,EAAAA,EAAAA,IAAUH,EAAaC,EAAQ,KACvEE,EAAAA,EAAAA,IAAUH,EAAa,KAGzB,IAAMI,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAACC,GAAD,OAAQH,GAASI,EAAAA,EAAAA,IAAeD,KAE9CE,GAAeC,EAAAA,EAAAA,QAAO,OAE5BC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAUH,EAAaG,QAMvBC,EAAW,IAAIC,sBALI,SAACC,EAASF,GAElC,OAAOE,EAAQ,GAAGC,eAAiBV,GAAY,GAAQA,GAAY,KAGR,CAAEW,UAAW,EAAKC,WAAY,qBAI1F,OAFAL,EAASM,QAAQP,GAEV,kBAAMC,EAASO,UAAUR,MAC9B,CAACH,KAGaf,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWyB,YAAvD,IACA,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAb,EAAAA,EAAAA,YAAU,WAETa,EAAS,CACRC,gBAAyB,cAAUhC,EAAQiC,EAAcC,EAAhC,SAGxB,KAGF,gBAAKC,IAAKnB,EAAV,UACC,SAAC,EAAD,CAAQlB,SAlDC,4CAmDRC,eAAgBM,EAChBR,UAAWiC,EACXxC,WAAY,kBAAMmB,EAAS,iB","sources":["componrnts/button/button.jsx","componrnts/main/Banner/Banner.jsx","componrnts/main/Banner/BannerContainer.jsx"],"sourcesContent":["\r\n//компонента кнопка \r\nconst Button = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"btn\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn__btn\"\r\n\t\t\t\tdisabled={props.btnDisabled}\r\n\t\t\t\tonClick={props.onClickBtn}\r\n\t\t\t\ttype={props.btnType}\r\n\t\t\t\thidden={props.hiddenBtn}\r\n\t\t\t>{props.text}</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Button;","import Button from './../../button/button';\r\n\r\n\r\nconst Banner = (props) => {\r\n\r\n\t// главный баннер\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"main__banner banner\">\r\n\t\t\t<div className=\"banner__bg\" style={props.bannerImg}></div>\r\n\t\t\t<div className=\"banner__container container\">\r\n\t\t\t\t<div className=\"banner__article article\">\r\n\t\t\t\t\t<h1 className=\"article__title\" >{props.titleMod} </h1>\r\n\t\t\t\t\t<article className=\"article__article\">{props.articleTextMod}</article>\r\n\t\t\t\t\t<div className=\"article__btn\">\r\n\t\t\t\t\t\t<Button onClickBtn={props.onClickBtn} btnType={'button'} text={'Sign up'} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default Banner;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport bannerImg from \"./../../../assets/img/Banner_photo.webp\";\r\nimport bannerImg1x from \"./../../../assets/img/banner.webp\";\r\nimport bannerImgMob from \"./../../../assets/img/banner_mob@2x.webp\";\r\nimport bannerImgMob1x from \"./../../../assets/img/banner_mob@1x.webp\";\r\n\r\nimport Banner from \"./Banner\";\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { cutString } from \"../../utilits/functions\";\r\nimport { changeIsSrcoll } from \"../../redux/headerSlice\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst BannerContainer = (props) => {\r\n\t// проверка значений брейкпоинта\r\n\tconst { is768 } = useSelector(state => state.mediaQuery.breakPoints);\r\n\t// текст заголовка\r\n\tconst title = `Test assignment for front-end developers `\r\n\t//текст статьи\r\n\tlet articleText = `Front-end developers make sure the user sees and \r\n\tinteracts with all the necessary elements to ensure conversion.\r\n\t Therefore, responsive design, programming languages and specific\r\n\t  frameworks are the must-have skillsets to look for when assessing \r\n\t  your front-end developers. `;\r\n\t// образем тест статьи при ширине меньше 768\r\n\tif (!is768) {\r\n\t\tconst dotPos = articleText.indexOf('.') + 1;\r\n\t\tarticleText = (dotPos && dotPos < 117) ? cutString(articleText, dotPos, '') :\r\n\t\t\tcutString(articleText, 120);\r\n\t};\r\n\t// редиректим на страницу регистарции при нажатии кнопки\r\n\tconst redirect = useNavigate();\r\n\r\n\tconst dispatch = useDispatch();\r\n\t// функция изменения значения isScroll- для изменения стиля header при скороле\r\n\tconst setIsScroll = (is) => dispatch(changeIsSrcoll(is));\r\n\t// привязывем реф для получение значения скрола\r\n\tconst containerRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst current = containerRef.current;\r\n\t\tconst callbackFunction = (entries, observer) => {\r\n\r\n\t\t\treturn entries[0].isIntersecting ? setIsScroll(true) : setIsScroll(false)\r\n\t\t};\r\n\t\t// создаем асинх наблюдателя за пересечением. процент переченение 1 и отсупом сверху 60\r\n\t\tconst observer = new IntersectionObserver(callbackFunction, { threshold: 1.0, rootMargin: '60px 0px 0px 0px' })\r\n\t\t//добавляем наблюдателя\r\n\t\tobserver.observe(current);\r\n\t\t// снимаем наблюдателя при демонтировки компоненті\r\n\t\treturn () => observer.unobserve(current);\r\n\t}, [containerRef]);\r\n\t//=================================\r\n\r\n\tconst isRetina = useSelector(state => state.mediaQuery.isRetina);\r\n\tconst [bgImg, setBgImg] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t//откладываем загрузку изображений\r\n\t\tsetBgImg({\r\n\t\t\tbackgroundImage: isRetina ? `url(${is768 ? bannerImg1x : bannerImgMob1x})`\r\n\t\t\t\t: `url(${is768 ? bannerImg1x : bannerImgMob1x})`,\r\n\t\t});\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div ref={containerRef} >\r\n\t\t\t<Banner titleMod={title}\r\n\t\t\t\tarticleTextMod={articleText}\r\n\t\t\t\tbannerImg={bgImg}\r\n\t\t\t\tonClickBtn={() => redirect(`/login`)}\r\n\t\t\t/>\r\n\t\t</div>)\r\n}\r\n\r\nexport default BannerContainer;\r\n"],"names":["props","className","disabled","btnDisabled","onClick","onClickBtn","type","btnType","hidden","hiddenBtn","text","style","bannerImg","titleMod","articleTextMod","is768","useSelector","state","mediaQuery","breakPoints","articleText","dotPos","indexOf","cutString","redirect","useNavigate","dispatch","useDispatch","setIsScroll","is","changeIsSrcoll","containerRef","useRef","useEffect","current","observer","IntersectionObserver","entries","isIntersecting","threshold","rootMargin","observe","unobserve","isRetina","useState","bgImg","setBgImg","backgroundImage","bannerImg1x","bannerImgMob1x","ref"],"sourceRoot":""}