{"version":3,"file":"static/js/141.4a48c89b.chunk.js","mappings":"wMAqBA,EAlBe,SAACA,GAEf,OACC,iBAAKC,UAAU,sBAAf,WACC,gBAAKA,UAAU,aAAaC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAMI,UAAf,SACpD,gBAAKH,UAAU,8BAAf,UACC,iBAAKA,UAAU,0BAAf,WACC,gBAAIA,UAAU,iBAAd,UAAiCD,EAAMK,SAAvC,QACA,oBAASJ,UAAU,mBAAnB,SAAuCD,EAAMM,kBAC7C,gBAAKL,UAAU,eAAf,UACC,SAAC,IAAD,CAAQM,WAAYP,EAAMO,WAAYC,QAAS,SAAUC,KAAM,uB,wCCoCrE,EArCwB,SAACT,GAExB,IAIIU,EAAW,qSAMf,KAVkBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,eAAhDC,MAUI,CACX,IAAMC,EAASN,EAAYO,QAAQ,KAAO,EAC1CP,EAAeM,GAAUA,EAAS,KAAOE,EAAAA,EAAAA,IAAUR,EAAaM,EAAQ,KACvEE,EAAAA,EAAAA,IAAUR,EAAa,KAGzB,IAAMS,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAIXC,EClC4B,SAACC,GAEnC,IAAMD,GAAeE,EAAAA,EAAAA,QAAO,MAEtBC,EAAmB,SAAAC,GAAO,OAAIA,EAAQ,GAAGC,eAAiBJ,GAAO,GAASA,GAAO,IAWvF,OAVAK,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAUP,EAAaO,QAEvBC,EAAW,IAAIC,qBAAqBN,EAAkB,CAAEO,UAAW,IAIzE,OAFAH,GAAWC,EAASG,QAAQJ,GAErB,kBAAMA,GAAWC,EAASI,UAAUL,MACzC,CAACP,IAEGA,EDmBca,EAFD,SAACC,GAAD,OAAQhB,GAASiB,EAAAA,EAAAA,IAAeD,OAKpD,OACC,gBAAKE,IAAKhB,EAAV,UACC,SAAC,EAAD,CAAQlB,SAzBC,4CA0BRC,eAAgBI,EAChBN,UAAWA,EACXG,WAAY,kBAAMY,EAAS,iB","sources":["componrnts/main/Banner/Banner.jsx","componrnts/main/Banner/BannerContainer.jsx","componrnts/Hook/useHeaderWhenScroll.js"],"sourcesContent":["import Button from './../../button/button';\r\n\r\n\r\nconst Banner = (props) => {\r\n\t// главный баннер\r\n\treturn (\r\n\t\t<div className=\"main__banner banner\">\r\n\t\t\t<div className=\"banner__bg\" style={{ backgroundImage: `url(${props.bannerImg})` }}></div>\r\n\t\t\t<div className=\"banner__container container\">\r\n\t\t\t\t<div className=\"banner__article article\">\r\n\t\t\t\t\t<h1 className=\"article__title\" >{props.titleMod} </h1>\r\n\t\t\t\t\t<article className=\"article__article\">{props.articleTextMod}</article>\r\n\t\t\t\t\t<div className=\"article__btn\">\r\n\t\t\t\t\t\t<Button onClickBtn={props.onClickBtn} btnType={'button'} text={'Sign up'} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default Banner;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport bannerImg from \"./../../../assets/img/banner.webp\";\r\n//import bannerImgMob2x from \"./../../../assets/img/banner_mob@2x.webp\";\r\n\r\nimport Banner from \"./Banner\";\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useHeaderWhenScroll } from './../../Hook/useHeaderWhenScroll';\r\nimport { cutString } from \"../../utilits/functions\";\r\nimport { changeIsSrcoll } from \"../../redux/headerSlice\";\r\n\r\n\r\nconst BannerContainer = (props) => {\r\n\t// проверка значений брейкпоинта\r\n\tconst { is768 } = useSelector(state => state.mediaQuery.breakPoints);\r\n\t// текст заголовка\r\n\tconst title = `Test assignment for front-end developers `\r\n\t//текст статьи\r\n\tlet articleText = `Front-end developers make sure the user sees and \r\n\tinteracts with all the necessary elements to ensure conversion.\r\n\t Therefore, responsive design, programming languages and specific\r\n\t  frameworks are the must-have skillsets to look for when assessing \r\n\t  your front-end developers. `;\r\n\t// образем тест статьи при ширине меньше 768\r\n\tif (!is768) {\r\n\t\tconst dotPos = articleText.indexOf('.') + 1;\r\n\t\tarticleText = (dotPos && dotPos < 117) ? cutString(articleText, dotPos, '') :\r\n\t\t\tcutString(articleText, 120);\r\n\t};\r\n\t// редиректим на страницу регистарции при нажатии кнопки\r\n\tconst redirect = useNavigate();\r\n\r\n\tconst dispatch = useDispatch();\r\n\t// функция изменения значения isScroll- для изменения стиля header при скороле\r\n\tconst setIsScroll = (is) => dispatch(changeIsSrcoll(is));\r\n\t// привязывем реф для получение значения скрола\r\n\tconst containerRef = useHeaderWhenScroll(setIsScroll);\r\n\r\n\r\n\treturn (\r\n\t\t<div ref={containerRef}>\r\n\t\t\t<Banner titleMod={title}\r\n\t\t\t\tarticleTextMod={articleText}\r\n\t\t\t\tbannerImg={bannerImg}\r\n\t\t\t\tonClickBtn={() => redirect(`/login`)}\r\n\t\t\t/>\r\n\t\t</div>)\r\n}\r\n\r\nexport default BannerContainer;\r\n","import { useEffect, useRef } from \"react\"\r\n// отслеживам скрол на странице\r\nexport const useHeaderWhenScroll = (scroll) => {\r\n\t// подключемся к рефу\r\n\tconst containerRef = useRef(null);\r\n\t// колбек если есть пересчение целевого элемента  вызвается колбек с true или false\r\n\tconst callbackFunction = entries => entries[0].isIntersecting ? scroll(false) : scroll(true);\r\n\tuseEffect(() => {\r\n\t\tconst current = containerRef.current;\r\n\t\t// создаем асинх наблюдателя за пересечением. процент переченение 1\r\n\t\tconst observer = new IntersectionObserver(callbackFunction, { threshold: 1, })\r\n\t\t//добавляем наблюдателя\r\n\t\tcurrent && observer.observe(current);\r\n\t\t// снимаем наблюдателя при демонтировки компоненті\r\n\t\treturn () => current && observer.unobserve(current);\r\n\t}, [containerRef]);\r\n\r\n\treturn containerRef;\r\n}\r\n\r\n"],"names":["props","className","style","backgroundImage","bannerImg","titleMod","articleTextMod","onClickBtn","btnType","text","articleText","useSelector","state","mediaQuery","breakPoints","is768","dotPos","indexOf","cutString","redirect","useNavigate","dispatch","useDispatch","containerRef","scroll","useRef","callbackFunction","entries","isIntersecting","useEffect","current","observer","IntersectionObserver","threshold","observe","unobserve","useHeaderWhenScroll","is","changeIsSrcoll","ref"],"sourceRoot":""}